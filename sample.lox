print "Testing sample.lox";

// Expression Statement Evaluation

true or false;
true and (true or false);
-4 + 5 > -10;
4 * 7.5 >= 28;
"5" != 5;
true == true;
(5 < 5);
5 <= 23 == true;
!false;
!!true == true;
2 * (3 + 4) == 20 / 2;
"Hello World!";
true;
false;
true != nil;
nil;
(1 + 2.9) != 4;
(((1) + 2) + 3.14);

// Variable Declaration

var a; var b; var e = nil;
var c = 3;
var d = true;
var f = e = "Hello World!";

// Variable Assignment

a = b = 1;
d = !d;

// If Statements

var p = true;

if (a = true) {
	if (p) print "a is true";
} else {
	if (p) print "a is false";
}

c = 2;
if (c == 1) {
	if (p) print "c is 1";
	else c = -1;
} else if (c == 2) {
	if (p) print "c is 2";
	else c = -1;
} else {
	if (p) print "c is neither 1 nor 2";
	else c = -1;
}

if (d)
	if (!p) print "d is true";
	else print "!p";
else
	if (!p) print "d is false";
	else print "!p";

if (nil) print "nil is truthy";
else print "nil is falsey";

if (3) print "3 is truthy";
else print "3 is falsey";

if (0) print "0 is truthy";
else print "0 is falsey";

if ("POP") print "'POP' is truthy";
else print "'POP' is falsey";

if ("") print "'' is truthy";
else print "'' is falsey";

// While Loops

a = 0;
while (a < 10) {
	a = a + 1;
}

while (a > 0)
	a = a - 1;

if (a == 0)
	print "a is 0!";

a = 0;
while (a < 10) {
	a = a + 1;
	if (a == 5)
		print "a is 5!";
}

// For Loops

var k;
for (var i = 0; i < 10; i = i + 1) k=i;
if (k != 9)
	print "k is not 9";

var i = 0;
for (;i<0;){
	i = i + 1;
}

// Variable Scopes

var g = 0;
{
	var g = 1;
	print g == 1;
}
print g == 0;

// Functions

fun sayHi(first, last) {
		print "Hi, " + first + " " + last + "!";
}
sayHi("John", "Smith");

fun printTwice() {
	fun printOnce(){
		print "Inner";
	}

	print "Outer";
	printOnce();
}

printTwice();

fun fib(n){
	if (n<=1) return 1;
	return fib(n-1) + fib(n-2);
}

for (var i = 0; i < 10; i = i + 1) {
	print fib(i);
}

var a = "outer";
{
	fun showA(){
		print a;
	}

	showA(); // "outer"
	var a = "inner";
	showA(); // "outer"
}

var a = "outer";
{
	fun showA(){
		print a;
	}

	showA(); // "outer"
	a = "inner"; // not declaring a new var, so this is a reassignment of global 'a'
	showA(); // "inner"
}

// Classes

class Animal {
	speak() {
		print "I'm an animal!";
	}
}

var animal = Animal();
animal.speak();
var dog = animal;
dog.speak();

class Counter{
	init(){
		this.count = 0;
		return;
	}

	inc(){
		this.count = this.count + 1;
		return this.count;
	}
}

var counter = Counter();
print counter.inc();
print counter.inc();

fun dec(c){
	c.count = c.count - 1;
	return c.count;
}

print dec(counter);

class Cake{
	taste(){
		var adjective = "delicious";
		print "This " + this.flavour + " cake is " + adjective + "!";
	}
}

var cake = Cake();
cake.flavour = "German Chocolate";
cake.taste();

// Inheritance

class Doughnut{
	cook(){
		print "Fry until golden brown";
	}
}

class BostonCream < Doughnut {
	cook(){
		super.cook();
		print "Pipe full of custard and coat with chocolate.";
	}
}

BostonCream().cook();

class A{
	method(){
		print "Method A";
	}
}

class B < A{
	method(){
		print "Method B";
	}
	test(){
		super.method();
	}
}

class C < B {}
C().test();
A().method();
B().method();
C().method();

print "Completed sample.lox!";
